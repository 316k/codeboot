/* ----- UI helpers ----- */

var NAVBAR_HEIGHT = 40;
var EDITOR_SPACING = 20;

function makeCloseButton() {
    return $("<button/>").addClass("close").append("&times;");
}

function makeMenuSeparator() {
    return $('<li class="divider"></li>');
}

cp.scrollTo = function (elementOrSelector) {
    var elementOffset = $(elementOrSelector).offset().top - NAVBAR_HEIGHT - EDITOR_SPACING;
    $("body").animate({scrollTop: elementOffset}, 400);
}

cp.getShortURL = function (longURL) {
	var shortURL;
	$.ajax({
            url: "shorten.php",
            data: {url: longURL},
            dataType: "json",
            async: false,
            success: function (data) {
				shortURL = data.id;
            }
    });
    return shortURL;
};

function makeToolbar() {
    var $toolbar = $('<div class="btn-toolbar pull-right"/>');

    return $toolbar;
}

function makeTBGroup() {
    return $('<div class="btn-group"/>');
}

function makeTBButton($contents, props) {
    var $btn = $('<button class="btn"/>');

    for (var key in props) {
        $btn.attr(key, props[key]);
    }

    if ($contents) {
        $btn.append($contents);
    }

    return $btn;
}

function makeDropdown($contents, populateFn, props) {
    var $group = $('<div class="btn-group"/>');
    var $dropdownBtn = $('<a class="btn dropdown-toggle" data-toggle="dropdown" href="#"/>');
    $dropdownBtn.append($contents);
    $dropdownBtn.append(document.createTextNode(" "));
    $dropdownBtn.append($('<span class="caret"></span>'));

    var $dropdownMenu = $('<ul class="dropdown-menu"/>');
    if (populateFn) populateFn($dropdownMenu);

    $group.append($dropdownBtn);
    $group.append($dropdownMenu);

    return $group;
}

function makeDropdownItem($contents) {
	return $('<li/>').append($('<a href="#"/>').append($contents));
}

/* ----- Internal file system ----- */

var BUILTIN_FILES = {
        'sample/hello.js' : '// This program prints a famous greeting\n' +
                            '\n' +
                            'print("Hello, world!\\n");\n',
        'sample/fact.js'  : '// This program prints the factorial of 5\n' +
                            '\n' +
                            'var fact = function (n) {\n' +
                            '    if (n <= 1) {\n' +
                            '        return 1;\n' +
                            '    } else {\n' +
                            '        return n * fact(n-1);\n' +
                            '    }\n' +
                            '};\n' +
                            '\n' +
                            'print(fact(5));\n',
        'sample/sqrt2.js' : '// This program computes the square root of 2 without using Math.sqrt\n' +
                            '\n' +
                            'var n = 2;\n' +
                            'var a = n; // approximation of sqrt(n)\n' +
                            '\n' +
                            'do {\n' +
                            '    a = (a + n/a) / 2;\n' +
                            '} while (a != (a + n/a) / 2);\n' +
                            '\n' +
                            'print(a);\n',

"ift1015-A12/TP1/police8x13.js" :
"// Fichier: ift1015-A12/TP1/police8x13.js\n" +
"\n" +
"// Donn\u00e9es graphiques pour une police monoespace des 256 premiers\n" +
"// caract\u00e8res Unicode.\n" +
"\n" +
"// Un programme qui d\u00e9sire utiliser ces donn\u00e9es doit contenir\n" +
"// l'appel de fonction :\n" +
"//\n" +
"//     load(\"ift1015-A12/TP1/police8x13.js\");\n" +
"\n" +
"// La variable police8x13 sera d\u00e9finie avec comme valeur une structure\n" +
"// avec les champs suivants :\n" +
"//\n" +
"// largeur : Nombre de colonnes dans l'image d'un caract\u00e8re.\n" +
"//\n" +
"// hauteur : Nombre de rang\u00e9es dans l'image d'un caract\u00e8re.\n" +
"//\n" +
"// images : Tableau de 256 \u00e9l\u00e9ments.  Chaque \u00e9l\u00e9ment d\u00e9crit l'image\n" +
"//          d'un caract\u00e8re.\n" +
"//\n" +
"// L'encodage des images de caract\u00e8res est le suivant.  L'image d'un\n" +
"// caract\u00e8re est donn\u00e9 par un tableau contenant un nombre d'entiers \u00e9gal\n" +
"// \u00e0 hauteur (par exemple dans une police 8 par 13, il y aura\n" +
"// 13 entiers dans le tableau).  L'encodage binaire de cet entier\n" +
"// donne la composition d'une rang\u00e9e de l'image.  Chaque bit \u00e0 1\n" +
"// dans l'encodage binaire correspond \u00e0 un pixel color\u00e9 de l'image.\n" +
"// Le nombre de bits significatifs par entier est \u00e9gal \u00e0 largeur.\n" +
"//\n" +
"// Par exemple, dans la police ci-dessous, le caract\u00e8re B, qui a le\n" +
"// code 66 dans le jeu de caract\u00e8res Unicode, a une image d\u00e9crite par\n" +
"// ce tableau de 13 entiers :\n" +
"//\n" +
"// [0x00,0x00,0x7c,0x22,0x22,0x22,0x3c,0x22,0x22,0x22,0x7c,0x00,0x00]\n" +
"//\n" +
"// Si on encode en binaire chacun de ces entiers et qu'on remplace ensuite\n" +
"// parmi les 8 bits de poids faible chaque 0 par un \".\" et chaque 1 par\n" +
"// \"#\" pour obtenir le patron de pixels on obtient :\n" +
"//\n" +
"// 0x00 est encod\u00e9 par 00000000 ce qui donne le patron ........\n" +
"// 0x00 est encod\u00e9 par 00000000 ce qui donne le patron ........\n" +
"// 0x7c est encod\u00e9 par 01111100 ce qui donne le patron .#####..\n" +
"// 0x22 est encod\u00e9 par 00100010 ce qui donne le patron ..#...#.\n" +
"// 0x22 est encod\u00e9 par 00100010 ce qui donne le patron ..#...#.\n" +
"// 0x22 est encod\u00e9 par 00100010 ce qui donne le patron ..#...#.\n" +
"// 0x3c est encod\u00e9 par 00111100 ce qui donne le patron ..####..\n" +
"// 0x22 est encod\u00e9 par 00100010 ce qui donne le patron ..#...#.\n" +
"// 0x22 est encod\u00e9 par 00100010 ce qui donne le patron ..#...#.\n" +
"// 0x22 est encod\u00e9 par 00100010 ce qui donne le patron ..#...#.\n" +
"// 0x7c est encod\u00e9 par 01111100 ce qui donne le patron .#####..\n" +
"// 0x00 est encod\u00e9 par 00000000 ce qui donne le patron ........\n" +
"// 0x00 est encod\u00e9 par 00000000 ce qui donne le patron ........\n" +
"\n" +
"var police8x13 = { largeur: 8, hauteur: 13, images:\n" +
"[\n" +
" [0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 0\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 1\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 2\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 3\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 4\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 5\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 6\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 7\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 8\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 9\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 10\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 11\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 12\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 13\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 14\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 15\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 16\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 17\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 18\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 19\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 20\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 21\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 22\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 23\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 24\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 25\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 26\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 27\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 28\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 29\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 30\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 31\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 32  \n" +
",[0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x08,0x00,0x00] // 33 !\n" +
",[0x00,0x00,0x14,0x14,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 34 \"\n" +
",[0x00,0x00,0x00,0x14,0x14,0x3e,0x14,0x3e,0x14,0x14,0x00,0x00,0x00] // 35 #\n" +
",[0x00,0x00,0x00,0x08,0x1e,0x28,0x1c,0x0a,0x3c,0x08,0x00,0x00,0x00] // 36 $\n" +
",[0x00,0x00,0x22,0x52,0x24,0x08,0x08,0x10,0x24,0x4a,0x44,0x00,0x00] // 37 %\n" +
",[0x00,0x00,0x00,0x00,0x30,0x48,0x48,0x30,0x4a,0x44,0x3a,0x00,0x00] // 38 &\n" +
",[0x00,0x00,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 39 '\n" +
",[0x00,0x00,0x04,0x08,0x08,0x10,0x10,0x10,0x08,0x08,0x04,0x00,0x00] // 40 (\n" +
",[0x00,0x00,0x10,0x08,0x08,0x04,0x04,0x04,0x08,0x08,0x10,0x00,0x00] // 41 )\n" +
",[0x00,0x00,0x00,0x00,0x24,0x18,0x7e,0x18,0x24,0x00,0x00,0x00,0x00] // 42 *\n" +
",[0x00,0x00,0x00,0x00,0x08,0x08,0x3e,0x08,0x08,0x00,0x00,0x00,0x00] // 43 +\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x18,0x20,0x00] // 44 ,\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x00,0x00,0x00] // 45 -\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x1c,0x08,0x00] // 46 .\n" +
",[0x00,0x00,0x02,0x02,0x04,0x04,0x08,0x10,0x10,0x20,0x20,0x00,0x00] // 47 /\n" +
",[0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x42,0x42,0x24,0x18,0x00,0x00] // 48 0\n" +
",[0x00,0x00,0x08,0x18,0x28,0x08,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 49 1\n" +
",[0x00,0x00,0x3c,0x42,0x42,0x02,0x04,0x18,0x20,0x40,0x7e,0x00,0x00] // 50 2\n" +
",[0x00,0x00,0x7e,0x02,0x04,0x08,0x1c,0x02,0x02,0x42,0x3c,0x00,0x00] // 51 3\n" +
",[0x00,0x00,0x04,0x0c,0x14,0x24,0x44,0x44,0x7e,0x04,0x04,0x00,0x00] // 52 4\n" +
",[0x00,0x00,0x7e,0x40,0x40,0x5c,0x62,0x02,0x02,0x42,0x3c,0x00,0x00] // 53 5\n" +
",[0x00,0x00,0x1c,0x20,0x40,0x40,0x5c,0x62,0x42,0x42,0x3c,0x00,0x00] // 54 6\n" +
",[0x00,0x00,0x7e,0x02,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x00,0x00] // 55 7\n" +
",[0x00,0x00,0x3c,0x42,0x42,0x42,0x3c,0x42,0x42,0x42,0x3c,0x00,0x00] // 56 8\n" +
",[0x00,0x00,0x3c,0x42,0x42,0x46,0x3a,0x02,0x02,0x04,0x38,0x00,0x00] // 57 9\n" +
",[0x00,0x00,0x00,0x00,0x08,0x1c,0x08,0x00,0x00,0x08,0x1c,0x08,0x00] // 58 :\n" +
",[0x00,0x00,0x00,0x00,0x08,0x1c,0x08,0x00,0x00,0x1c,0x18,0x20,0x00] // 59 ;\n" +
",[0x00,0x00,0x02,0x04,0x08,0x10,0x20,0x10,0x08,0x04,0x02,0x00,0x00] // 60 <\n" +
",[0x00,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x7e,0x00,0x00,0x00,0x00] // 61 =\n" +
",[0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x04,0x08,0x10,0x20,0x00,0x00] // 62 >\n" +
",[0x00,0x00,0x3c,0x42,0x42,0x02,0x04,0x08,0x08,0x00,0x08,0x00,0x00] // 63 ?\n" +
",[0x00,0x00,0x3c,0x42,0x42,0x4e,0x52,0x56,0x4a,0x40,0x3c,0x00,0x00] // 64 @\n" +
",[0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x7e,0x42,0x42,0x42,0x00,0x00] // 65 A\n" +
",[0x00,0x00,0x7c,0x22,0x22,0x22,0x3c,0x22,0x22,0x22,0x7c,0x00,0x00] // 66 B\n" +
",[0x00,0x00,0x3c,0x42,0x40,0x40,0x40,0x40,0x40,0x42,0x3c,0x00,0x00] // 67 C\n" +
",[0x00,0x00,0x7c,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x7c,0x00,0x00] // 68 D\n" +
",[0x00,0x00,0x7e,0x40,0x40,0x40,0x78,0x40,0x40,0x40,0x7e,0x00,0x00] // 69 E\n" +
",[0x00,0x00,0x7e,0x40,0x40,0x40,0x78,0x40,0x40,0x40,0x40,0x00,0x00] // 70 F\n" +
",[0x00,0x00,0x3c,0x42,0x40,0x40,0x40,0x4e,0x42,0x46,0x3a,0x00,0x00] // 71 G\n" +
",[0x00,0x00,0x42,0x42,0x42,0x42,0x7e,0x42,0x42,0x42,0x42,0x00,0x00] // 72 H\n" +
",[0x00,0x00,0x3e,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 73 I\n" +
",[0x00,0x00,0x0e,0x04,0x04,0x04,0x04,0x04,0x04,0x44,0x38,0x00,0x00] // 74 J\n" +
",[0x00,0x00,0x42,0x44,0x48,0x50,0x60,0x50,0x48,0x44,0x42,0x00,0x00] // 75 K\n" +
",[0x00,0x00,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7e,0x00,0x00] // 76 L\n" +
",[0x00,0x00,0x42,0x66,0x66,0x5a,0x5a,0x42,0x42,0x42,0x42,0x00,0x00] // 77 M\n" +
",[0x00,0x00,0x42,0x42,0x62,0x52,0x4a,0x46,0x42,0x42,0x42,0x00,0x00] // 78 N\n" +
",[0x00,0x00,0x3c,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 79 O\n" +
",[0x00,0x00,0x7c,0x42,0x42,0x42,0x7c,0x40,0x40,0x40,0x40,0x00,0x00] // 80 P\n" +
",[0x00,0x00,0x3c,0x42,0x42,0x42,0x42,0x42,0x52,0x4a,0x3c,0x02,0x00] // 81 Q\n" +
",[0x00,0x00,0x7c,0x42,0x42,0x42,0x7c,0x50,0x48,0x44,0x42,0x00,0x00] // 82 R\n" +
",[0x00,0x00,0x3c,0x42,0x40,0x40,0x3c,0x02,0x02,0x42,0x3c,0x00,0x00] // 83 S\n" +
",[0x00,0x00,0x3e,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00] // 84 T\n" +
",[0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 85 U\n" +
",[0x00,0x00,0x42,0x42,0x42,0x24,0x24,0x24,0x18,0x18,0x18,0x00,0x00] // 86 V\n" +
",[0x00,0x00,0x42,0x42,0x42,0x42,0x5a,0x5a,0x66,0x66,0x42,0x00,0x00] // 87 W\n" +
",[0x00,0x00,0x42,0x42,0x24,0x24,0x18,0x24,0x24,0x42,0x42,0x00,0x00] // 88 X\n" +
",[0x00,0x00,0x22,0x22,0x14,0x14,0x08,0x08,0x08,0x08,0x08,0x00,0x00] // 89 Y\n" +
",[0x00,0x00,0x7e,0x02,0x04,0x08,0x18,0x10,0x20,0x40,0x7e,0x00,0x00] // 90 Z\n" +
",[0x00,0x3c,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3c,0x00] // 91 [\n" +
",[0x00,0x00,0x20,0x20,0x10,0x10,0x08,0x04,0x04,0x02,0x02,0x00,0x00] // 92 \\\n" +
",[0x00,0x3c,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x3c,0x00] // 93 ]\n" +
",[0x00,0x00,0x08,0x14,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 94 ^\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7e,0x00] // 95 _\n" +
",[0x00,0x10,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 96 `\n" +
",[0x00,0x00,0x00,0x00,0x00,0x3c,0x02,0x3e,0x42,0x46,0x3a,0x00,0x00] // 97 a\n" +
",[0x00,0x00,0x40,0x40,0x40,0x5c,0x62,0x42,0x42,0x62,0x5c,0x00,0x00] // 98 b\n" +
",[0x00,0x00,0x00,0x00,0x00,0x3c,0x42,0x40,0x40,0x42,0x3c,0x00,0x00] // 99 c\n" +
",[0x00,0x00,0x02,0x02,0x02,0x3a,0x46,0x42,0x42,0x46,0x3a,0x00,0x00] // 100 d\n" +
",[0x00,0x00,0x00,0x00,0x00,0x3c,0x42,0x7e,0x40,0x42,0x3c,0x00,0x00] // 101 e\n" +
",[0x00,0x00,0x1c,0x22,0x20,0x20,0x78,0x20,0x20,0x20,0x20,0x00,0x00] // 102 f\n" +
",[0x00,0x00,0x00,0x00,0x00,0x3a,0x44,0x44,0x38,0x40,0x3c,0x42,0x3c] // 103 g\n" +
",[0x00,0x00,0x40,0x40,0x40,0x5c,0x62,0x42,0x42,0x42,0x42,0x00,0x00] // 104 h\n" +
",[0x00,0x00,0x00,0x08,0x00,0x18,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 105 i\n" +
",[0x00,0x00,0x00,0x02,0x00,0x06,0x02,0x02,0x02,0x02,0x22,0x22,0x1c] // 106 j\n" +
",[0x00,0x00,0x40,0x40,0x40,0x44,0x48,0x70,0x48,0x44,0x42,0x00,0x00] // 107 k\n" +
",[0x00,0x00,0x18,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 108 l\n" +
",[0x00,0x00,0x00,0x00,0x00,0x34,0x2a,0x2a,0x2a,0x2a,0x22,0x00,0x00] // 109 m\n" +
",[0x00,0x00,0x00,0x00,0x00,0x5c,0x62,0x42,0x42,0x42,0x42,0x00,0x00] // 110 n\n" +
",[0x00,0x00,0x00,0x00,0x00,0x3c,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 111 o\n" +
",[0x00,0x00,0x00,0x00,0x00,0x5c,0x62,0x42,0x62,0x5c,0x40,0x40,0x40] // 112 p\n" +
",[0x00,0x00,0x00,0x00,0x00,0x3a,0x46,0x42,0x46,0x3a,0x02,0x02,0x02] // 113 q\n" +
",[0x00,0x00,0x00,0x00,0x00,0x5c,0x22,0x20,0x20,0x20,0x20,0x00,0x00] // 114 r\n" +
",[0x00,0x00,0x00,0x00,0x00,0x3c,0x42,0x30,0x0c,0x42,0x3c,0x00,0x00] // 115 s\n" +
",[0x00,0x00,0x00,0x20,0x20,0x78,0x20,0x20,0x20,0x22,0x1c,0x00,0x00] // 116 t\n" +
",[0x00,0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x42,0x46,0x3a,0x00,0x00] // 117 u\n" +
",[0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x22,0x14,0x14,0x08,0x00,0x00] // 118 v\n" +
",[0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x2a,0x2a,0x2a,0x14,0x00,0x00] // 119 w\n" +
",[0x00,0x00,0x00,0x00,0x00,0x42,0x24,0x18,0x18,0x24,0x42,0x00,0x00] // 120 x\n" +
",[0x00,0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x46,0x3a,0x02,0x42,0x3c] // 121 y\n" +
",[0x00,0x00,0x00,0x00,0x00,0x7e,0x04,0x08,0x10,0x20,0x7e,0x00,0x00] // 122 z\n" +
",[0x00,0x0e,0x10,0x10,0x10,0x08,0x30,0x08,0x10,0x10,0x10,0x0e,0x00] // 123 {\n" +
",[0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00] // 124 |\n" +
",[0x00,0x38,0x04,0x04,0x04,0x08,0x06,0x08,0x04,0x04,0x04,0x38,0x00] // 125 }\n" +
",[0x00,0x00,0x12,0x2a,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 126 ~\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 127\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 128\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 129\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 130\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 131\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 132\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 133\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 134\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 135\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 136\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 137\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 138\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 139\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 140\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 141\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 142\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 143\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 144\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 145\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 146\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 147\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 148\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 149\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 150\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 151\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 152\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 153\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 154\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 155\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 156\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 157\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 158\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 159\n" +
",[0x00,0x00,0x56,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x6a,0x00,0x00] // 160\n" +
",[0x00,0x00,0x08,0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00] // 161\n" +
",[0x00,0x00,0x08,0x1c,0x2a,0x28,0x28,0x2a,0x1c,0x08,0x00,0x00,0x00] // 162\n" +
",[0x00,0x00,0x1c,0x22,0x20,0x20,0x70,0x20,0x20,0x22,0x5c,0x00,0x00] // 163\n" +
",[0x00,0x00,0x00,0x00,0x42,0x3c,0x24,0x24,0x3c,0x42,0x00,0x00,0x00] // 164\n" +
",[0x00,0x00,0x44,0x44,0x28,0x28,0x7c,0x10,0x7c,0x10,0x10,0x00,0x00] // 165\n" +
",[0x00,0x00,0x08,0x08,0x08,0x08,0x00,0x08,0x08,0x08,0x08,0x00,0x00] // 166\n" +
",[0x00,0x18,0x24,0x20,0x18,0x24,0x24,0x18,0x04,0x24,0x18,0x00,0x00] // 167\n" +
",[0x00,0x00,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 168\n" +
",[0x00,0x00,0x3c,0x42,0x5a,0x52,0x52,0x52,0x5a,0x42,0x3c,0x00,0x00] // 169\n" +
",[0x00,0x00,0x1c,0x02,0x1e,0x22,0x1e,0x00,0x3e,0x00,0x00,0x00,0x00] // 170\n" +
",[0x00,0x00,0x00,0x0a,0x14,0x28,0x50,0x28,0x14,0x0a,0x00,0x00,0x00] // 171\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x02,0x02,0x00,0x00,0x00,0x00] // 172\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x00,0x00] // 173\n" +
",[0x00,0x00,0x3c,0x42,0x5a,0x56,0x56,0x5a,0x56,0x42,0x3c,0x00,0x00] // 174\n" +
",[0x00,0x00,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 175\n" +
",[0x00,0x00,0x18,0x24,0x24,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 176\n" +
",[0x00,0x00,0x00,0x08,0x08,0x3e,0x08,0x08,0x00,0x3e,0x00,0x00,0x00] // 177\n" +
",[0x00,0x10,0x28,0x08,0x10,0x20,0x38,0x00,0x00,0x00,0x00,0x00,0x00] // 178\n" +
",[0x00,0x38,0x08,0x10,0x08,0x28,0x10,0x00,0x00,0x00,0x00,0x00,0x00] // 179\n" +
",[0x00,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00] // 180\n" +
",[0x00,0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x42,0x66,0x5a,0x40,0x00] // 181\n" +
",[0x00,0x00,0x3e,0x74,0x74,0x74,0x34,0x14,0x14,0x14,0x14,0x00,0x00] // 182\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00] // 183\n" +
",[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x10] // 184\n" +
",[0x00,0x10,0x30,0x10,0x10,0x10,0x38,0x00,0x00,0x00,0x00,0x00,0x00] // 185\n" +
",[0x00,0x00,0x18,0x24,0x24,0x18,0x00,0x3c,0x00,0x00,0x00,0x00,0x00] // 186\n" +
",[0x00,0x00,0x00,0x50,0x28,0x14,0x0a,0x14,0x28,0x50,0x00,0x00,0x00] // 187\n" +
",[0x00,0x20,0x60,0x20,0x20,0x22,0x76,0x0a,0x0a,0x0e,0x02,0x00,0x00] // 188\n" +
",[0x00,0x20,0x60,0x20,0x20,0x24,0x7a,0x02,0x04,0x08,0x0e,0x00,0x00] // 189\n" +
",[0x00,0x70,0x10,0x20,0x10,0x52,0x26,0x0a,0x0a,0x0e,0x02,0x00,0x00] // 190\n" +
",[0x00,0x00,0x10,0x00,0x10,0x10,0x20,0x40,0x42,0x42,0x3c,0x00,0x00] // 191\n" +
",[0x00,0x10,0x08,0x00,0x18,0x24,0x42,0x42,0x7e,0x42,0x42,0x00,0x00] // 192\n" +
",[0x00,0x08,0x10,0x00,0x18,0x24,0x42,0x42,0x7e,0x42,0x42,0x00,0x00] // 193\n" +
",[0x00,0x18,0x24,0x00,0x18,0x24,0x42,0x42,0x7e,0x42,0x42,0x00,0x00] // 194\n" +
",[0x00,0x32,0x4c,0x00,0x18,0x24,0x42,0x42,0x7e,0x42,0x42,0x00,0x00] // 195\n" +
",[0x00,0x24,0x24,0x00,0x18,0x24,0x42,0x42,0x7e,0x42,0x42,0x00,0x00] // 196\n" +
",[0x00,0x18,0x24,0x18,0x18,0x24,0x42,0x42,0x7e,0x42,0x42,0x00,0x00] // 197\n" +
",[0x00,0x00,0x2e,0x50,0x50,0x50,0x5c,0x70,0x50,0x50,0x5e,0x00,0x00] // 198\n" +
",[0x00,0x00,0x3c,0x42,0x40,0x40,0x40,0x40,0x40,0x42,0x3c,0x08,0x10] // 199\n" +
",[0x00,0x10,0x08,0x00,0x7e,0x40,0x40,0x78,0x40,0x40,0x7e,0x00,0x00] // 200\n" +
",[0x00,0x08,0x10,0x00,0x7e,0x40,0x40,0x78,0x40,0x40,0x7e,0x00,0x00] // 201\n" +
",[0x00,0x18,0x24,0x00,0x7e,0x40,0x40,0x78,0x40,0x40,0x7e,0x00,0x00] // 202\n" +
",[0x00,0x24,0x24,0x00,0x7e,0x40,0x40,0x78,0x40,0x40,0x7e,0x00,0x00] // 203\n" +
",[0x00,0x10,0x08,0x00,0x3e,0x08,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 204\n" +
",[0x00,0x08,0x10,0x00,0x3e,0x08,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 205\n" +
",[0x00,0x08,0x14,0x00,0x3e,0x08,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 206\n" +
",[0x00,0x22,0x22,0x00,0x3e,0x08,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 207\n" +
",[0x00,0x00,0x7c,0x22,0x22,0x22,0x72,0x22,0x22,0x22,0x7c,0x00,0x00] // 208\n" +
",[0x00,0x32,0x4c,0x00,0x42,0x62,0x52,0x52,0x4a,0x46,0x42,0x00,0x00] // 209\n" +
",[0x00,0x10,0x08,0x00,0x3c,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 210\n" +
",[0x00,0x08,0x10,0x00,0x3c,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 211\n" +
",[0x00,0x18,0x24,0x00,0x3c,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 212\n" +
",[0x00,0x32,0x4c,0x00,0x3c,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 213\n" +
",[0x00,0x24,0x24,0x00,0x3c,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 214\n" +
",[0x00,0x00,0x00,0x00,0x42,0x24,0x18,0x18,0x24,0x42,0x00,0x00,0x00] // 215\n" +
",[0x00,0x02,0x3c,0x46,0x4a,0x4a,0x52,0x52,0x52,0x62,0x3c,0x40,0x00] // 216\n" +
",[0x00,0x10,0x08,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 217\n" +
",[0x00,0x08,0x10,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 218\n" +
",[0x00,0x18,0x24,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 219\n" +
",[0x00,0x24,0x24,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 220\n" +
",[0x00,0x04,0x08,0x00,0x22,0x22,0x14,0x08,0x08,0x08,0x08,0x00,0x00] // 221\n" +
",[0x00,0x00,0x40,0x7c,0x42,0x42,0x42,0x7c,0x40,0x40,0x40,0x00,0x00] // 222\n" +
",[0x00,0x00,0x18,0x24,0x24,0x28,0x28,0x24,0x22,0x22,0x2c,0x00,0x00] // 223\n" +
",[0x00,0x00,0x10,0x08,0x00,0x3c,0x02,0x3e,0x42,0x46,0x3a,0x00,0x00] // 224\n" +
",[0x00,0x00,0x08,0x10,0x00,0x3c,0x02,0x3e,0x42,0x46,0x3a,0x00,0x00] // 225\n" +
",[0x00,0x00,0x18,0x24,0x00,0x3c,0x02,0x3e,0x42,0x46,0x3a,0x00,0x00] // 226\n" +
",[0x00,0x00,0x32,0x4c,0x00,0x3c,0x02,0x3e,0x42,0x46,0x3a,0x00,0x00] // 227\n" +
",[0x00,0x00,0x24,0x24,0x00,0x3c,0x02,0x3e,0x42,0x46,0x3a,0x00,0x00] // 228\n" +
",[0x00,0x18,0x24,0x18,0x00,0x3c,0x02,0x3e,0x42,0x46,0x3a,0x00,0x00] // 229\n" +
",[0x00,0x00,0x00,0x00,0x00,0x34,0x0a,0x3e,0x48,0x4a,0x34,0x00,0x00] // 230\n" +
",[0x00,0x00,0x00,0x00,0x00,0x3c,0x42,0x40,0x40,0x42,0x3c,0x08,0x10] // 231\n" +
",[0x00,0x00,0x10,0x08,0x00,0x3c,0x42,0x7e,0x40,0x42,0x3c,0x00,0x00] // 232\n" +
",[0x00,0x00,0x08,0x10,0x00,0x3c,0x42,0x7e,0x40,0x42,0x3c,0x00,0x00] // 233\n" +
",[0x00,0x00,0x18,0x24,0x00,0x3c,0x42,0x7e,0x40,0x42,0x3c,0x00,0x00] // 234\n" +
",[0x00,0x00,0x24,0x24,0x00,0x3c,0x42,0x7e,0x40,0x42,0x3c,0x00,0x00] // 235\n" +
",[0x00,0x00,0x10,0x08,0x00,0x18,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 236\n" +
",[0x00,0x00,0x08,0x10,0x00,0x18,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 237\n" +
",[0x00,0x00,0x18,0x24,0x00,0x18,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 238\n" +
",[0x00,0x00,0x24,0x24,0x00,0x18,0x08,0x08,0x08,0x08,0x3e,0x00,0x00] // 239\n" +
",[0x00,0x24,0x18,0x28,0x04,0x3c,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 240\n" +
",[0x00,0x00,0x32,0x4c,0x00,0x5c,0x62,0x42,0x42,0x42,0x42,0x00,0x00] // 241\n" +
",[0x00,0x00,0x10,0x08,0x00,0x3c,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 242\n" +
",[0x00,0x00,0x08,0x10,0x00,0x3c,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 243\n" +
",[0x00,0x00,0x18,0x24,0x00,0x3c,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 244\n" +
",[0x00,0x00,0x32,0x4c,0x00,0x3c,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 245\n" +
",[0x00,0x00,0x24,0x24,0x00,0x3c,0x42,0x42,0x42,0x42,0x3c,0x00,0x00] // 246\n" +
",[0x00,0x00,0x00,0x08,0x08,0x00,0x3e,0x00,0x08,0x08,0x00,0x00,0x00] // 247\n" +
",[0x00,0x00,0x00,0x00,0x02,0x3c,0x46,0x4a,0x52,0x62,0x3c,0x40,0x00] // 248\n" +
",[0x00,0x00,0x10,0x08,0x00,0x42,0x42,0x42,0x42,0x46,0x3a,0x00,0x00] // 249\n" +
",[0x00,0x00,0x08,0x10,0x00,0x42,0x42,0x42,0x42,0x46,0x3a,0x00,0x00] // 250\n" +
",[0x00,0x00,0x18,0x24,0x00,0x42,0x42,0x42,0x42,0x46,0x3a,0x00,0x00] // 251\n" +
",[0x00,0x00,0x24,0x24,0x00,0x42,0x42,0x42,0x42,0x46,0x3a,0x00,0x00] // 252\n" +
",[0x00,0x00,0x08,0x10,0x00,0x42,0x42,0x42,0x46,0x3a,0x02,0x42,0x3c] // 253\n" +
",[0x00,0x00,0x00,0x40,0x40,0x5c,0x62,0x42,0x42,0x62,0x5c,0x40,0x40] // 254\n" +
",[0x00,0x00,0x24,0x24,0x00,0x42,0x42,0x42,0x46,0x3a,0x02,0x42,0x3c] // 255\n" +
"]\n" +
"};\n",

};

var NEW_FILE_DEFAULT_CONTENT = "// Enter JavaScript code here";

function CPFile(filename, content, opts) {
    this.filename = filename;
    this.content = (content !== (void 0)) ? content : NEW_FILE_DEFAULT_CONTENT;
    this.stamp = 0;
    this.editor = undefined;

    if (opts) {
        for (var prop in opts) {
            this[prop] = opts[prop];
        }
    }
}

CPFile.prototype.getContent = function () {
    if (this.editor) {
        return this.editor.getValue();
    }

    return this.content;
};

CPFile.prototype.save = function () {
    if (this.editor) {
        var old_content = this.content;
        var new_content = this.editor.getValue();
        if (new_content !== old_content) {
            this.content = new_content;
            this.stamp += 1;
        }
    }
};

CPFile.prototype.serialize = function () {
    var json = {
        filename: this.filename,
        content: this.getContent(),
        stamp: this.stamp
    };
    return json;
};

CPFile.prototype.clone = function () {
    var other = new CPFile(this.filename, this.content);
    for (var prop in this) {
        if (this.hasOwnProperty(prop)) {
            other[prop] = this[prop];
        }
    }
    return other;
};

function CPFileManager() {
    this.clear();
}

CPFileManager.prototype.clear = function () {
    this.builtins = {};
    this.files = Object.create(this.builtins);
    this._loadBuiltins();
};

CPFileManager.prototype._loadBuiltins = function () {
    for (var filename in BUILTIN_FILES) {
        var f = new CPFile(filename, BUILTIN_FILES[filename]);
        this.builtins[filename] = f;
    };
};

CPFileManager.prototype._asFilename = function (fileOrFilename) {
    if (typeof fileOrFilename === "string") return fileOrFilename;
    return fileOrFilename.filename;
};

CPFileManager.prototype._asFile = function (fileOrFilename) {
    if (typeof fileOrFilename !== "string") return fileOrFilename;
    return this.getByName(fileOrFilename);
};

CPFileManager.prototype.isBuiltin = function (fileOrFilename) {
    var filename = this._asFilename(fileOrFilename);
    return this.builtins.hasOwnProperty(filename);
};

CPFileManager.prototype.addFile = function (f) {
    this.files[f.filename] = f;
};

CPFileManager.prototype.hasFile = function (fileOrFilename) {
    var filename = this._asFilename(fileOrFilename);
    return this.files.hasOwnProperty(filename) || this.builtins.hasOwnProperty(filename);
};

CPFileManager.prototype.getByName = function (filename) {
    if (!this.hasFile(filename)) {
        throw "File not found: '" + filename + "'";
    }
    var file = this.files[filename];
    if (!this.files.hasOwnProperty(filename)) {
        // This is a builtin file, make an editable copy
        file = file.clone();
        this.files[filename] = file;
    }
    return file;
};

CPFileManager.prototype.deleteFile = function (fileOrFilename) {
    var filename = this._asFilename(fileOrFilename);
    if (this.hasFile(filename)) {
        delete this.files[filename];
        return true;
    }

    return false;
};

CPFileManager.prototype.renameFile = function (fileOrFilename, newFilename) {
    if (this.hasFile(newFilename)) {
        throw "File already exists: " + newFilename;
    }
    var file = this._asFile(fileOrFilename);
    delete this.files[file.filename];
    file.filename = newFilename;
    this.addFile(file);
};

CPFileManager.prototype.getContent = function (fileOrFilename) {
    var file = this._asFile(fileOrFilename);
    return file.getContent();
};

CPFileManager.prototype.getEditor = function (fileOrFilename) {
    return this._asFile(fileOrFilename).editor;
};

CPFileManager.prototype.each = function (callback, selector) {
    if (!selector) selector = function (f) { return true; };
    for (var filename in this.files) {
        if (!this.hasFile(filename)) continue; // Prune Object method name

        var file = this.getByName(filename);
        if (selector(file)) {
            callback(file);
        }
    }
};

CPFileManager.prototype.serialize = function () {
    var json = [];
    var self = this;
    var isUserFile = function (file) {
        return self.files.hasOwnProperty(file.filename);
    };

    this.each(function (file) {
        json.push(file.serialize());
    },
    isUserFile);

    return json;
};

CPFileManager.prototype.restore = function (json) {
    this.clear();
    for (var i = 0; i < json.length; i++) {
        var fileProps = json[i];
        var file = new CPFile(fileProps.filename, fileProps.content, fileProps);
        this.addFile(file);
    }
};

// ----------------------------------------------------------------------

cp.addFileToMenu = function (fileOrFilename) {
    var file = cp.fs._asFile(fileOrFilename);
    var filename = file.filename;

    var $file_item = $('<li/>');
    $file_item.attr("data-cp-filename", filename);
    var $file_link = $('<a href="#"/>');
    $file_link.click(function () {
        cp.openFile(filename);
    });

    if (!cp.fs.isBuiltin(file)) {
        var $deleteButton = $('<i class="icon-trash pull-right"/>');
        $file_link.append($deleteButton);
        $deleteButton.click(function (event) {
            var reallyDelete = confirm("Delete file '" + filename + "'? This cannot be undone.");
            if (reallyDelete) {
                cp.deleteFile(filename);
            } else {
                event.preventDefault();
                event.stopPropagation();
            }
        });
    }

    $file_link.append(filename);
    $file_item.append($file_link);

    // Keep the menu sorted
    var $children = $("#file-list").children();
    for (var i = 0; i < $children.size(); i++) {
        var $element = $($children.get(i));
        var element_filename = $element.attr('data-cp-filename');
        if (filename < element_filename) {
            $file_item.insertBefore($element);
            return;
        }
    }

    $("#file-list").append($file_item);
};

cp.rebuildFileMenu = function () {
    $("#file-list").empty();
    cp.fs.each(function (file) {
        cp.addFileToMenu(file);
    });
};

cp.initFS = function () {
    cp.fs = new CPFileManager();
    cp.rebuildFileMenu();
};

cp.generateUniqueFilename = function () {
    var prefix = "script";
    for (var index = 1; ; index++) {
        var candidateName = prefix + index;
        if (!cp.fs.hasFile(candidateName)) {
            return candidateName;
        }
    }
};

cp.getContainerFor = function (fileOrFilename) {
    var filename = cp.fs._asFilename(fileOrFilename);
    return $('.row[data-cp-filename="' + filename + '"]').get(0);
};

cp.openFile = function (filename) {
    var container = cp.getContainerFor(filename);
    if (container) {
        cp.scrollTo(container);
    } else {
        cp.newTab(filename);
    }
};

cp.closeFile = function (fileOrFilename) {
    var file = cp.fs._asFile(fileOrFilename);
    file.save();
    file.editor = null;

	var $container = $(cp.getContainerFor(file));

	if ($(".exec-point-code", $container).size() > 0) {
		// Current file editor contains some highlighted code
		cp.hide_step();
	}

    $container.remove();
};

cp.closeAll = function () {
    $("[data-cp-filename]").each(function () {
        var filename = $(this).attr('data-cp-filename');
        cp.closeFile(filename);
    });
};

cp.deleteFile = function (filename) {
    $('[data-cp-filename="' + filename + '"]').remove();
    cp.fs.deleteFile(filename);
};

function basename(filename) {
    return filename.replace(/\\/g,'/').replace( /.*\//, '');
}

function endsWith(str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
}

cp.makeEditorToolbar = function (file) {
    var $toolbar = makeToolbar();
    $toolbar.attr('data-cp-exec', 'controller');

    var $execControlsGroup = makeTBGroup();
    $execControlsGroup.appendTo($toolbar);

    var $stepButton = makeTBButton($('<i class="icon-play"/>'), {"title" : "Step"});
    $stepButton.addClass('exec-btn-step');
    $stepButton.append($('<img class="exec-icon-stepMode" src="icons/exp_pause.png"/>'));
    $stepButton.append($('<img class="exec-icon-singleStep hide" src="icons/exp_1.png"/>'));
    $stepButton.click(function () {
        if (program_state.mode === 'stopped') {
            program_state.step_delay = 0;
            cp.load(file.filename, true);
        } else {
            cp.animate(0);
        }
    });
    $stepButton.appendTo($execControlsGroup);

    var $loadButton = makeTBButton($('<i class="icon-play"/>'), {"title" : "Load"});
    $loadButton.addClass('exec-btn-play');
    $loadButton.append($('<img src="icons/exp_inf.png"/>'));
    $loadButton.click(function () {
        if (program_state.mode === 'stopped') {
            cp.load(file.filename, false);
        } else {
            cp.play();
        }
    });
    $loadButton.appendTo($execControlsGroup);

    var $animateButton = makeTBButton($('<i class="icon-play"/>'), {"title" : "Load"});
    $animateButton.addClass('exec-btn-anim');
    $animateButton.click(function () {
        if (program_state.mode === 'stopped') {
            program_state.step_delay = cp.stepDelay;
            cp.load(file.filename, true);
        } else {
            cp.animate(cp.stepDelay);
        }
    });
    $animateButton.appendTo($execControlsGroup);

    return $toolbar;
};

cp.makeLHSEditorToolbar = function (file) {
    var $toolbar = makeToolbar();
    var $group = makeTBGroup();
    $group.appendTo($toolbar);

    var $saveButton = makeTBButton($('<i class="icon-download-alt"/>'), {"title" : "Download"});
    $saveButton.click(function () {
        var name = basename(file.filename);
        if (!endsWith(name, ".js")) {
            name = name + ".js";
        }
        saveAs(cp.fs.getContent(file), name);
    });
    $saveButton.appendTo($group);

    var $btnShare = makeDropdown($('<i class="icon-share"/>'), function ($menu) {
//      var $zclipItem = makeDropdownItem($('<span class="cp-zclip-target" data-zclip-role="copy-url">Copy URL</span>'));
// 		$menu.append($zclipItem);
		$menu.append(makeDropdownItem("Generate URL").click(function () {
			var content = cp.fs.getContent(file);
			var url = editor_URL(content, file.filename);
			$("#urlModal-body").text(url);
			$("#urlModal").modal('show');
		}));

		$menu.append(makeDropdownItem("Email URL").click(function () {
			var content = cp.fs.getContent(file);
			var subject = encodeURIComponent("codePlay URL");
			var body = encodeURIComponent(editor_URL(content, file.filename));
		    var href = "mailto:?subject=" + subject + "&body=" + body;
			var w = window.open(href, "_blank");
			if (w) w.close();
		}));

		$menu.append(makeDropdownItem("Shorten URL").click(function () {
			var content = cp.fs.getContent(file);
			var url = editor_URL(content, file.filename);

			var shortURL = cp.getShortURL(url);
			if (shortURL) {
				$("#urlModal-body").text(shortURL);
				$("#urlModal").modal('show');
			}
		}));
    }, {"title" : "Share contents"});

	// Wait for zclip to be visible, as this is required by the zclip library
    /*
    $("[data-zclip-role]:visible", $btnShare).livequery(function() {
        // Don't perform this initialization again
        $("[data-zclip-role]:visible", $btnShare).expire();

		// Initialize zclip
		$(this).zclip({
			path:'include/ZeroClipboard.swf',
			copy: function() {
				var content = cp.fs.getContent(file);
				return editor_URL(content, file.filename);
			},
			setCSSEffects: false
		});

		// Stretch zclip to cover its entire parent
		var $link = $(this).parent();
		var $zclip = $(".zclip", $link);

		$zclip.css("position", "absolute");
		$zclip.css("left", "0");
		$zclip.css("top", "0");
		$zclip.css("width", $link.outerWidth());
		$zclip.css("height", $link.outerHeight());

		var $zclipFlash = $("embed", $link);
		$zclipFlash.css("left", 0);
		$zclipFlash.css("top", 0);
		$zclipFlash.css("width", "100%");
		$zclipFlash.css("height", "100%");
	});
    */

    $btnShare.appendTo($group);

    return $toolbar;
};

var SAVE_DELAY = 300; // length of window (in ms) during which changes will be buffered

function createFileEditor(node, file) {
    var editor = createCodeEditor(node);

    file.editor = editor;
    editor.setValue(file.content);
    var saveHandler = function () {
        file.save();
        editor.currentSaveTimeout = (void 0);
    };
    editor.on("change", function (cm, change) {
        if (editor.currentSaveTimeout !== (void 0)) {
            // extend the window
            clearTimeout(editor.currentSaveTimeout);
        }
        editor.currentSaveTimeout = setTimeout(saveHandler, SAVE_DELAY);
    });
    return editor;
}

function cp_internal_onTabDblClick(event) {
    var $element = $(event.target);

    var oldFilename = $element.text();
    var $inputBox = $('<input type="text" class="rename-box span2"/>');
    $inputBox.val(oldFilename);
    $element.empty();
    $element.append($inputBox);

    var resetTab = function () {
        $inputBox.remove();
        $element.text(oldFilename);
    };

    $inputBox.focusout(resetTab);

    $inputBox.keydown(function (event) {
        if (event.keyCode == 13) {
            // Enter pressed, perform renaming
            var newFilename = $inputBox.val();
            if (cp.fs.hasFile(newFilename)) {
                alert("Filename already in use");
                resetTab();
                return;
            }

            cp.fs.renameFile(oldFilename, newFilename);
            $inputBox.remove();
            $element.text(newFilename);
            $('[data-cp-filename="' + oldFilename + '"]').attr("data-cp-filename", newFilename);

            cp.rebuildFileMenu(); // TODO: inefficient
        } else if (event.keyCode == 27) {
            // Escape pressed, reset
            resetTab();
        }
    });

    $inputBox.focus();
}

cp.newTab = function (fileOrFilename) {
	/*
     * <div class="row">
     *   <ul class="nav nav-tabs">
     *     <li class="active"><a href="#">Untitled.js<button class="close">&times;</button></a></li>
     *   </ul>
     *   <pre class="tab-content"></pre>
     * </div>
    */

    var file = cp.fs._asFile(fileOrFilename);
    var filename = file.filename;

	var $row = $('<div class="row"/>');
	$row.attr("data-cp-filename", filename);

	var $toolbar = cp.makeEditorToolbar(file);
	$row.append($toolbar);

	if (program_state.mode !== "stopped") {
	    setControllerState($toolbar, false);
	}

	var $nav = $('<ul class="nav nav-tabs"/>');

	var $closeButton = makeCloseButton();
	$closeButton.click(function () {
	    cp.closeFile(file);
	});
	$tab_text_container = $('<span class="tab-label"/>').text(filename);
	$tab_label = $('<a href="#"/>').append($tab_text_container).append($closeButton);
	$nav.append($('<li class="active"/>').append($tab_label));
    $nav.append($('<li/>').append(cp.makeLHSEditorToolbar(file)));
	$row.append($nav);

	// Support renaming
	$tab_text_container.dblclick(cp_internal_onTabDblClick);

	var $pre = $('<pre class="tab-content file-editor"/>');
	$row.append($pre);

    $row.insertAfter($("#step-value-row"));

	var editor = createFileEditor($pre.get(0), file);

	cp.scrollTo($row);

    // Make editor resizable
    $(".CodeMirror", $row).resizable({
          handles: "s",
          minHeight: 100,
          stop: function() { editor.refresh(); },
          resize: function() {
            $(".CodeMirror-scroll", $row).height($(this).height());
            $(".CodeMirror-scroll", $row).width($(this).width());
            editor.refresh();
          }
    });
};

cp.newFile = function () {
    var filename = cp.generateUniqueFilename();
    var file = new CPFile(filename);
    cp.fs.addFile(file);

    cp.addFileToMenu(file);
    cp.newTab(file);
    return filename;
};

cp.openFileExistingOrNew = function (filename) {

    if (cp.fs.hasFile(filename)) {
        cp.openFile(filename);
        return true;
    } else {
        var file = new CPFile(filename);
        cp.fs.addFile(file);

        cp.addFileToMenu(file);
        cp.newTab(file);
        return false;
    }
};
